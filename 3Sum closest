https://leetcode.com/problems/3sum-closest/
class Solution {
public:

    int threeSumClosest(vector<int>& nums, int target) {
        // set<vector<int>> s;
        sort(nums.begin() , nums.end());
        int diff = INT_MAX;
        int ans = 0;
        for(int i = 0; i<nums.size(); i++){
            int element = nums[i];
            // int s = target - nums[i];
            int start = i+1;
            int end = nums.size()-1;
            while(start<end){
                if(element + nums[start] + nums[end] == target){
                    return target;

                    
                }
                else if(abs(element + nums[start] + nums[end] - target) < diff){
                    diff  = abs(element + nums[start] + nums[end] - target);
                    ans =    element + nums[start] + nums[end] ;
                    

                }
                if(element + nums[start] + nums[end]>target){
                    end--;
                }
                else{
                    start++;
                }
            }



           
        }
        return ans;
        
    }
};
