Given an integer array nums, find three numbers whose product is maximum and return the maximum product.

 

Example 1:

Input: nums = [1,2,3]
Output: 6
Example 2:

Input: nums = [1,2,3,4]
Output: 24
Example 3:

Input: nums = [-1,-2,-3]
Output: -6
 

Constraints:

3 <= nums.length <= 104
-1000 <= nums[i] <= 1000

Soln
class Solution {
public:
public:
    int maximumProduct(vector<int>& nums) {
        sort(nums.rbegin(),nums.rend());
        int l=nums.size();
      if(nums[0]*nums[1]*nums[2]>nums[0]*nums[l-1]*nums[l-2]){
          return nums[0]*nums[1]*nums[2];
      }
        else{
            return nums[0]*nums[l-1]*nums[l-2];
        }
    }
};

